{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "",
    "Metadata": {},
    "Parameters": {
        "elasticSearchDomainName": {
            "Description": "Elastic Search Movies Domain",
            "Type": "String",
            "Default": "movies",
            "AllowedPattern": "[a-z0-9]+"
        },
        "s3BucketData": {
            "Description": "The name of the s3 bucket to use for the data",
            "Type": "String",
            "Default": "databucket",
            "AllowedPattern": "[a-z0-9-]+"
        },
        "s3BucketLambdaCode": {
            "Description": "The name of the s3 bucket that holds the code",
            "Type": "String",
            "Default": "lambdacodebucket",
            "AllowedPattern": "[a-z0-9-]+"
        },
        "s3BucketLambdacodeElasticSearchIndex": {
            "Description": "The name of the s3 key (zip file) within the bucket that holds the code for elastic search index",
            "Type": "String",
            "Default": "lambda_bundle.zip"
        },
        "lambdaElasticSearchIndexFunctionName": {
            "Description": "Lambda Function name used for indexing es",
            "Type": "String",
            "Default": "indexElasticSearch"
        },
        "s3BucketNameWebApp": {
            "Description": "The dns of the s3 bucket containing web app",
            "Type": "String",
            "Default": "webappbucket-name.s3.amazonaws.com"
        },
        "s3BucketNameWebAppKey": {
            "Description": "The key of web app within s3 bucket containing web app",
            "Type": "String",
            "Default": "webapp"
        }
    },
    "Mappings": {},
    "Conditions": {},
    "Resources": {
        "ElasticsearchDomain": {
            "Type": "AWS::Elasticsearch::Domain",
            "Properties": {
                "DomainName": {
                    "Ref": "elasticSearchDomainName"
                },
                "ElasticsearchClusterConfig": {
                    "DedicatedMasterEnabled": "true",
                    "InstanceCount": "2",
                    "ZoneAwarenessEnabled": "true",
                    "InstanceType": "m4.large.elasticsearch",
                    "DedicatedMasterType": "m4.large.elasticsearch",
                    "DedicatedMasterCount": "3"
                },
                "EBSOptions": {
                    "EBSEnabled": true,
                    "Iops": 0,
                    "VolumeSize": 20,
                    "VolumeType": "gp2"
                },
                "SnapshotOptions": {
                    "AutomatedSnapshotStartHour": "0"
                },
                "AdvancedOptions": {
                    "rest.action.multi.allow_explicit_index": "true"
                }
            }
        },
        "S3BucketDataSet": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "AccessControl": "Private",
                "BucketName": {
                    "Ref": "s3BucketData"
                }
            }
        },
        "lambdaElasticSearchIndex": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": "LambdaEsIndexRole",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "s3BucketLambdaCode"
                    },
                    "S3Key": {
                        "Ref": "s3BucketLambdacodeElasticSearchIndex"
                    }
                },
                "Description": "Invokes elastic search index",
                "Environment": {
                    "Variables": {
                        "elasticsearch_domain_name": {
                            "Fn::GetAtt": [
                                "elasticSearchDomainName",
                                "DomainEndpoint"
                            ]
                        }
                    }
                },
                "FunctionName": "elasticsearch_index",
                "Handler": "lambda_elasticsearch_handler.index_handler",
                "MemorySize": "128",
                "ReservedConcurrentExecutions": 100,
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaEsIndexRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.6",
                "Timeout": 10
            }
        },
        "LambdaEsIndexRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "Policies": [
                    {
                        "PolicyName": "S3GetCodeObjectPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Fn::Join": [
                                                            "/",
                                                            [
                                                                {
                                                                    "Ref": "s3BucketLambdaCode"
                                                                },
                                                                {
                                                                    "Ref": "s3BucketLambdacodeElasticSearchIndex"
                                                                }
                                                            ]
                                                        ]
                                                    }
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "RoleName": {
                    "Fn::Join": [
                        "",
                        [
                            "LambdaExecutionRole_",
                            {
                                "Ref": "lambdaElasticSearchIndexFunctionName"
                            }
                        ]
                    ]
                }
            }
        },
        "Cloudfront": {
            "Type": "AWS::CloudFront::Distribution",
            "Properties": {
                "DistributionConfig": {
                    "Aliases": [],
                    "CacheBehaviors": [],
                    "DefaultCacheBehavior": {
                        "AllowedMethods": ["HEAD", "GET", "POST"],                 
                        "ForwardedValues": {                       
                            "QueryString" : "true"
                          },                 
                        "TargetOriginId": "webappcontent"
                    },
                    "DefaultRootObject": "index.html",
                    "Enabled": "True",
                    "Origins": [
                        {
                            "DomainName": {
                                "Ref": "s3BucketNameWebApp"
                            },
                            "Id": "webappcontent",
                            "OriginPath": {
                                "Ref": "s3BucketNameWebAppKey"
                            },
                            "S3OriginConfig": {
                                "Fn::Join:": [
                                    "origin-access-identity/cloudfront/E15MNIMTCFKK4C"
                                ]
                            }
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "StackName",
                        "Value": "AWS::StackName"
                    }
                ]
            }
        }
    },
    "Outputs": {}
}